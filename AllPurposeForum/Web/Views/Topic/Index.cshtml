@model AllPurposeForum.Web.Models.TopicDetailViewModel
@using Microsoft.AspNetCore.Identity
@using AllPurposeForum.Data.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{ 
    ViewData["Title"] = Model.Topic?.Title ?? "Topic Details";
}

<div class="container mt-4">
    <div class="mb-3">
        <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary btn-sm">
            <i class="fas fa-arrow-left"></i> Back to All Topics
        </a>
    </div>

    <div class="topic-header mb-4 p-3 bg-light rounded">
        <h2>@Model.Topic?.Title</h2>
        <p class="text-muted">@Model.Topic?.Description</p>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="mb-0">Posts</h3>
        @if (SignInManager.IsSignedIn(User) && Model.Topic != null)
        {
            <a asp-controller="Post" asp-action="Create" asp-route-topicId="@Model.Topic.Id" class="btn btn-success btn-sm">
                <i class="fas fa-plus"></i> Create New Post
            </a>
        }
    </div>

    @if (Model.Posts != null && Model.Posts.Any())
    {
        foreach (var post in Model.Posts)
        {
            var currentUser = await UserManager.GetUserAsync(User);
            var isOwner = currentUser != null && post.UserId == currentUser.Id;
            var isAdmin = User.IsInRole("Admin");
            var isManager = User.IsInRole("Manager");

            <div class="card post-card mb-3">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0 flex-grow-1">
                        <a href="@Url.RouteUrl("PostDetails", new { postId = post.Id })">@post.Title</a>
                    </h5>
                    @if (SignInManager.IsSignedIn(User) && (isOwner || isAdmin || isManager))
                    {
                        <div class="dropdown ms-2">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="postActions_@post.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="postActions_@post.Id">
                                <li>
                                    <a class="dropdown-item" asp-controller="Post" asp-action="EditPost" asp-route-postId="@post.Id">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                </li>
                                <li>
                                    <form asp-controller="Post" asp-action="DeletePost" method="post" onsubmit="return confirm('Are you sure you want to delete this post?');">
                                        <input type="hidden" name="postId" value="@post.Id" />
                                        @if (Model.Topic != null) // Ensure Topic is not null before accessing Id
                                        {
                                            <input type="hidden" name="topicId" value="@Model.Topic.Id" />
                                        }
                                        <button type="submit" class="dropdown-item text-danger">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                    }
                </div>
                <div class="card-body">
                    <a href="@Url.RouteUrl("PostDetails", new { postId = post.Id })" class="text-decoration-none text-dark">
                        <p class="card-text">@post.ContentPreview</p>
                    </a>
                </div>
                <div class="card-footer d-flex justify-content-between align-items-center">
                    <small class="text-muted">By @post.AuthorName on @post.CreatedAtFormatted</small>
                    <small class="text-muted">Comments: @post.CommentsCount</small>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info" role="alert">
            No posts found in this topic yet.
        </div>
    }
</div>

<style>
    .topic-header {
        border-left: 5px solid #007bff;
    }

    .post-card {
        border: 1px solid #e0e0e0;
        transition: box-shadow .3s ease-in-out;
    }

    .post-card:hover {
        box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }

    .post-card .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #e0e0e0;
    }

    .post-card .card-footer {
        background-color: #f8f9fa;
        font-size: 0.9em;
    }
</style>